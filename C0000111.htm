<html><head><meta http-equiv="Content-Type" content="text/html; charset=windows-1251"><title>Небылицы</title><meta name="GENERATOR" content="Microsoft FrontPage 3.0"></head><body><font FACE="Arial" SIZE="4"><h1>Небылицы</h1><p><a href="mailto:me@snarky.com"><em>Георгий Кузнецов</em></a></p><p>Время от времени на Западе поднимается шумвокруг очередного иска к автомобильным илиавиастроительным компаниям по поводу дефектових продукции, повлекших тяжелые последствия.Суды разбираются в конструкции дверного запораили в правильности расположении бензобака.</p><p>А если бы так относились к программам? Почемувсе смирились с тем, что поставщик программыотказывается отвечать за ущерб, который онаможет причинить? Кому еще простили бы любимуюприсказку что, мол, не бывает изделий без ошибок --и это при запредельной рентабельностипрограммного бизнеса?</p><p>Во время недавней разборки по поводу ошибкиделения в процессоре Pentium, общественностьпопутно обнаружила ошибки в популярныхпрограммах. Тут отчетливо проявилась разница вподходах: процессор железный, ему ошибатьсянельзя, а программы ... что ж, мягкая рухлядь.</p><p>На самом деле между процессором и программойнет почти никакой разницы. И то, и другое -продукты быстро сближающихся технологий.Процессор выполняет многие свои функции, какмикропрограммы. Пресловутая ошибка деления былавызвана пропуском данных в таблице, и совершенното же самое могло бы случиться в любой программе.</p><p>Если отбросить мистику, единственнаяуважительная причина для ошибок - сложность. Но скакой стати программы считаются самыми сложнымиизделиями? Это неверно хотя бы потому, чтопрограммы никому не нужны сами по себе, онивсегда являются частью еще более сложнойсистемы, к которой, тем не менее, люди относятся,как к обычному техническому продукту.</p><p>Все это грандиозное надувательство выплывет насвет в один прекрасный день, когда какая-нибудькорпорация Эйр-Берия заявит: все 20 000произведенных нами авиалайнеров, находящихся ввоздухе в момент Ч, попадали кто куда, посколькуконструкторы (пилоты, диспетчеры, штурманы,пассажиры, ..., мир их праху) пользовалиськалькуляторами из комплекта ОС фирмы Мягкософт.</p><p>Программы, многие из которых составляют основунашей цивилизации, должны быть даже болеенадежны, чем железо. Их создателей надо отучитьувиливать от ответственности. Вопрос, однако, асмогут ли они что-либо сделать даже под угрозойбесчестья и разорения, или же ненадежностьпрограмм - их неизбывная особенность?</p><p>Поставим мысленный эксперимент: пусть вчера употребителей лопнуло терпение, тогда что мы,компьютерщики, будем делать сегодня? Какпризадумаешься, так много чего вспомнишь.Например, под разговоры о трудовом кризисе впрограммировании реальная конкуренция идет понаиболее трудоемким направлениям, к тому жеразвивая, как говорят американцы, свистульки ипогремушки вместо полезных свойств.</p><p>Windows'95 характерный, но не худший случай дурнонаправленной эволюции. В биологии есть примеры,когда отбор идет по вторично-половым признакам,загоняя вид в тупик. Скажем, у фазанов отрастаютневероятной красоты и величины крылья. Ни летать,ни бегать самцы не могут, но самкам нравятся. Вмире программ это называют shelfware - продуктыпокупают, способствуя их размножению, но почтиили совсем не применяют.</p><p>Все пишут на C, подстраиваясь под требованиямассового рынка (попсы, как сказали бы нашколлеги в шоу-бизнесе). Если применять критериинадежности, а значит снижения трудоемкостиразработки и упрощения самих программ, топлатформы сегодняшних IBM PC, все эти DOS и Windows, двухмесяцев не протянули бы. Но, вопрекираспространенному мнению, и Unix, и пуще того OS/2ненадолго бы их пережили. И никаких C++, только Eiffel!</p><p>Тестирование программ превратилось бы внезависимый бизнес. Скоро возник бы рынокстрахования поставщиков программногообеспечения - и уж страховщики бы навели порядоки с технологией, и с организацией. Разделениетруда в программировании обрело бы наконецправовые и экономические основы. Затраты наразработку программ возросла бы во много раз, ивскорости обычным делом стали бы коммерческиепродукты, целиком изготовленные на Visual Basic.Ассемблер, а не RAD стал бы считаться предметомроскоши.</p><p>Да, что там говорить, это был бы совершеннодругой мир. Даже хакерство приобрело быконструктивные формы. Какой искательприключений упустит шанс найти плюху в программеи вчинить поставщику иск во весь размах своейфантазии!</p><p>Но тут чувствуются и другие возможности дляроссийского бизнеса. Скажем, а нельзя лизавоевать мировой рынок обычным спредшитом, есливзять на себя ответственность за ущерб, которыйможет произойти при правильном применениипрограммы? Даже если нефтяной танкер разобьетсяу берегов Калифорнии! Под гарантии &quot;Селенги&quot;или &quot;Горного Алтая&quot;. </p><p>Не убедил? Ну, вот еще одна небывальщина.Допустим, вчера в России покончили с нелегальнымиспользованием софта. Что мы будем делатьсегодня с утра? </p><p>Поскольку скрыть такое событие не удастся,представительствам софтверных корпорацийпридется продавать и обслуживать свою продукцию.Печально, но не смертельно. А вот хардверщикистройными рядами вылетят в трубу: если вдругокажется, что стоимость владения PC за год покрайней мере равна ее цене, спрос круто пойдетвниз.</p><p>Мало того, покупные программы начнут еще иприменять (деньги-то какие плачены!), в результатечего нынешнее поколение программистов пойдетискать пропитания на большую дорогу. А уж какиеспособы они там найдут, мы достаточно хорошознаем.</p><p>Короче, завтра рухнет наш замечательныйЦивилизованный Компьютерный Рынок, апослезавтра западникам придется возрождатьинститут пиратства в России. Так им и надо; пустьуважают небылицы - наш национальный жанр!</p><p><em>№31(111), 11 сентября 1995</em></font></p></body></html>