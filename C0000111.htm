<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<title>Небылицы</title>
<meta name="GENERATOR" content="Microsoft FrontPage 3.0">
</head>

<body>
<font FACE="Arial" SIZE="4">

<h1>Небылицы</h1>

<p><a href="mailto:me@snarky.com"><em>Георгий Кузнецов</em></a></p>

<p>Время от времени на Западе поднимается шум
вокруг очередного иска к автомобильным или
авиастроительным компаниям по поводу дефектов
их продукции, повлекших тяжелые последствия.
Суды разбираются в конструкции дверного запора
или в правильности расположении бензобака.</p>

<p>А если бы так относились к программам? Почему
все смирились с тем, что поставщик программы
отказывается отвечать за ущерб, который она
может причинить? Кому еще простили бы любимую
присказку что, мол, не бывает изделий без ошибок --
и это при запредельной рентабельности
программного бизнеса?</p>

<p>Во время недавней разборки по поводу ошибки
деления в процессоре Pentium, общественность
попутно обнаружила ошибки в популярных
программах. Тут отчетливо проявилась разница в
подходах: процессор железный, ему ошибаться
нельзя, а программы ... что ж, мягкая рухлядь.</p>

<p>На самом деле между процессором и программой
нет почти никакой разницы. И то, и другое -
продукты быстро сближающихся технологий.
Процессор выполняет многие свои функции, как
микропрограммы. Пресловутая ошибка деления была
вызвана пропуском данных в таблице, и совершенно
то же самое могло бы случиться в любой программе.</p>

<p>Если отбросить мистику, единственная
уважительная причина для ошибок - сложность. Но с
какой стати программы считаются самыми сложными
изделиями? Это неверно хотя бы потому, что
программы никому не нужны сами по себе, они
всегда являются частью еще более сложной
системы, к которой, тем не менее, люди относятся,
как к обычному техническому продукту.</p>

<p>Все это грандиозное надувательство выплывет на
свет в один прекрасный день, когда какая-нибудь
корпорация Эйр-Берия заявит: все 20 000
произведенных нами авиалайнеров, находящихся в
воздухе в момент Ч, попадали кто куда, поскольку
конструкторы (пилоты, диспетчеры, штурманы,
пассажиры, ..., мир их праху) пользовались
калькуляторами из комплекта ОС фирмы Мягкософт.</p>

<p>Программы, многие из которых составляют основу
нашей цивилизации, должны быть даже более
надежны, чем железо. Их создателей надо отучить
увиливать от ответственности. Вопрос, однако, а
смогут ли они что-либо сделать даже под угрозой
бесчестья и разорения, или же ненадежность
программ - их неизбывная особенность?</p>

<p>Поставим мысленный эксперимент: пусть вчера у
потребителей лопнуло терпение, тогда что мы,
компьютерщики, будем делать сегодня? Как
призадумаешься, так много чего вспомнишь.
Например, под разговоры о трудовом кризисе в
программировании реальная конкуренция идет по
наиболее трудоемким направлениям, к тому же
развивая, как говорят американцы, свистульки и
погремушки вместо полезных свойств.</p>

<p>Windows'95 характерный, но не худший случай дурно
направленной эволюции. В биологии есть примеры,
когда отбор идет по вторично-половым признакам,
загоняя вид в тупик. Скажем, у фазанов отрастают
невероятной красоты и величины крылья. Ни летать,
ни бегать самцы не могут, но самкам нравятся. В
мире программ это называют shelfware - продукты
покупают, способствуя их размножению, но почти
или совсем не применяют.</p>

<p>Все пишут на C, подстраиваясь под требования
массового рынка (попсы, как сказали бы наш
коллеги в шоу-бизнесе). Если применять критерии
надежности, а значит снижения трудоемкости
разработки и упрощения самих программ, то
платформы сегодняшних IBM PC, все эти DOS и Windows, двух
месяцев не протянули бы. Но, вопреки
распространенному мнению, и Unix, и пуще того OS/2
ненадолго бы их пережили. И никаких C++, только Eiffel!</p>

<p>Тестирование программ превратилось бы в
независимый бизнес. Скоро возник бы рынок
страхования поставщиков программного
обеспечения - и уж страховщики бы навели порядок
и с технологией, и с организацией. Разделение
труда в программировании обрело бы наконец
правовые и экономические основы. Затраты на
разработку программ возросла бы во много раз, и
вскорости обычным делом стали бы коммерческие
продукты, целиком изготовленные на Visual Basic.
Ассемблер, а не RAD стал бы считаться предметом
роскоши.</p>

<p>Да, что там говорить, это был бы совершенно
другой мир. Даже хакерство приобрело бы
конструктивные формы. Какой искатель
приключений упустит шанс найти плюху в программе
и вчинить поставщику иск во весь размах своей
фантазии!</p>

<p>Но тут чувствуются и другие возможности для
российского бизнеса. Скажем, а нельзя ли
завоевать мировой рынок обычным спредшитом, если
взять на себя ответственность за ущерб, который
может произойти при правильном применении
программы? Даже если нефтяной танкер разобьется
у берегов Калифорнии! Под гарантии &quot;Селенги&quot;
или &quot;Горного Алтая&quot;. </p>

<p>Не убедил? Ну, вот еще одна небывальщина.
Допустим, вчера в России покончили с нелегальным
использованием софта. Что мы будем делать
сегодня с утра? </p>

<p>Поскольку скрыть такое событие не удастся,
представительствам софтверных корпораций
придется продавать и обслуживать свою продукцию.
Печально, но не смертельно. А вот хардверщики
стройными рядами вылетят в трубу: если вдруг
окажется, что стоимость владения PC за год по
крайней мере равна ее цене, спрос круто пойдет
вниз.</p>

<p>Мало того, покупные программы начнут еще и
применять (деньги-то какие плачены!), в результате
чего нынешнее поколение программистов пойдет
искать пропитания на большую дорогу. А уж какие
способы они там найдут, мы достаточно хорошо
знаем.</p>

<p>Короче, завтра рухнет наш замечательный
Цивилизованный Компьютерный Рынок, а
послезавтра западникам придется возрождать
институт пиратства в России. Так им и надо; пусть
уважают небылицы - наш национальный жанр!</p>

<p><em>№31(111), 11 сентября 1995</em></font></p>
</body>
</html>
